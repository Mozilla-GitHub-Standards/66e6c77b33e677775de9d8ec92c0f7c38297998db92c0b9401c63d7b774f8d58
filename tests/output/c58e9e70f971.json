[
    {
        "new": false,
        "deleted": false,
        "renamed_from": null,
        "filename": "browser/extensions/webcompat-reporter/test/browser/browser_report_site_issue.js",
        "binary": false,
        "count_add": 10,
        "count_del": 3,
        "lines": [
            [
                6,
                6,
                "  // ./head.js sets the value for PREF_WC_REPORTER_ENDPOINT"
            ],
            [
                7,
                7,
                "  await SpecialPowers.pushPrefEnv({set: [[PREF_WC_REPORTER_ENDPOINT, NEW_ISSUE_PAGE]]});"
            ],
            [
                8,
                8,
                ""
            ],
            [
                9,
                9,
                "  let tab1 = await BrowserTestUtils.openNewForegroundTab(gBrowser, TEST_PAGE);"
            ],
            [
                10,
                10,
                ""
            ],
            [
                11,
                11,
                "  let webcompatButton = document.getElementById(WC_PAGE_ACTION_ID);"
            ],
            [
                12,
                12,
                "  ok(webcompatButton, \"Report Site Issue button exists.\");"
            ],
            [
                13,
                13,
                ""
            ],
            [
                14,
                0,
                "  let newTabPromise = BrowserTestUtils.waitForNewTab(gBrowser);"
            ],
            [
                0,
                14,
                "  let screenshotPromise;"
            ],
            [
                0,
                15,
                "  let newTabPromise = new Promise(resolve => {"
            ],
            [
                0,
                16,
                "    gBrowser.tabContainer.addEventListener(\"TabOpen\", event => {"
            ],
            [
                0,
                17,
                "      let tab = event.target;"
            ],
            [
                0,
                18,
                "      screenshotPromise = BrowserTestUtils.waitForContentEvent("
            ],
            [
                0,
                19,
                "        tab.linkedBrowser, \"ScreenshotReceived\", false, null, true);"
            ],
            [
                0,
                20,
                "      resolve(tab);"
            ],
            [
                0,
                21,
                "    }, { once: true });"
            ],
            [
                0,
                22,
                "  });"
            ],
            [
                15,
                23,
                "  openPageActions();"
            ],
            [
                16,
                24,
                "  webcompatButton.click();"
            ],
            [
                17,
                25,
                "  let tab2 = await newTabPromise;"
            ],
            [
                18,
                0,
                ""
            ],
            [
                19,
                0,
                "  await BrowserTestUtils.waitForContentEvent(tab2.linkedBrowser, \"ScreenshotReceived\", false, null, true);"
            ],
            [
                0,
                26,
                "  await screenshotPromise;"
            ],
            [
                20,
                27,
                ""
            ],
            [
                21,
                28,
                "  await ContentTask.spawn(tab2.linkedBrowser, {TEST_PAGE}, function(args) {"
            ],
            [
                22,
                29,
                "    let doc = content.document;"
            ],
            [
                23,
                30,
                "    let urlParam = doc.getElementById(\"url\").innerText;"
            ],
            [
                24,
                31,
                "    let preview = doc.getElementById(\"screenshot-preview\");"
            ],
            [
                25,
                32,
                "    is(urlParam, args.TEST_PAGE, \"Reported page is correctly added to the url param\");"
            ],
            [
                26,
                33,
                ""
            ],
            [
                27,
                34,
                "    is(preview.innerText, \"Pass\", \"A Blob object was successfully transferred to the test page.\");"
            ]
        ]
    }
]